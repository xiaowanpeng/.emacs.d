#include <iostream>
#include <sys/socket.h>
#include <netinet/in.h>
#include <sys/types.h>
#include <string.h>
#include <errno.h>

using namespace std;

#define MAX_BUF_SIZE 128

int main()
{
    char buf[MAX_BUF_SIZE];
    int listenfd;
    int connfd;
    struct sockaddr_in svraddr;

    if ((listenfd = socket(AF_INET, SOCK_STREAM, 0)) == -1)
    {
        cout << "socket: " << strerror(errno) << endl;
        return -1;
    }

    memset(&svraddr, 0, sizeof(svraddr));

    svraddr.sin_family = AF_INET;
    svraddr.sin_addr.s_addr = htonl(INADDR_ANY);
    svraddr.sin_port = htons(6666);

    if ((bind(listenfd, (struct sockaddr*)&svraddr, sizeof(svraddr))) == -1)
    {
        cout << "bind: " << strerror(errno) << endl;
        return -1;
    }

    if (listen(listenfd, 10) == -1)
    {
        cout << "listen" << strerror(errno) << endl;
        return -1;
    }

    if ((connfd = accept(listenfd, NULL, NULL)) == -1)
    {
        cout << "accept" << strerror(errno) << endl;
        return -1;
    }

    while (1)
    {
        recv(connfd, buf, MAX_BUF_SIZE, 0);
        cout << buf << endl << "ÊäÈë£º" << endl;
        cin >> buf;
        send(connfd, buf, strlen(buf), 0);
    }
    
    return 0;
}
