;color-theme
;slime
;auto-complete
;smex
;yasnippet

(provide 'local_init)

(require 'color-theme)

;color-theme
(color-theme-initialize)
(color-theme-charcoal-black)

;copy and paste with x-window
(setq x-select-enable-clipboard t)

;show line number
(linum-mode)

;use smex
(global-set-key (kbd "M-x") 'smex)

;hide tool bar
(menu-bar-showhide-tool-bar-menu-customize-disable)

;set background alpha
(set-frame-parameter (selected-frame) 'alpha (list 95 80))

;change window
(global-set-key [(control tab)] 'other-window)

;; vim O o 
(defun start-newline-next ()
  (interactive)
  (end-of-line)
  (newline-and-indent))

(defun start-newline-prev ()
  (interactive)
  (beginning-of-line)
  (newline)
  (forward-line -1))

(global-set-key (kbd "M-o") 'start-newline-prev)
(global-set-key (kbd "C-o") 'start-newline-next)

;;自定义的代码风格
(defconst my-c-style
'("stroustrup" ;;基于现有的代码风格进行修改。
    (c-offsets-alist . ((access-label . -)
                                 (inclass . ++)
                                 (case-label . +)
                                 (statement-case-intro . +))))
"My Programming Style")
;; 将自定义的代码风格加入到列表中
(c-add-style "my" my-c-style)

(global-linum-mode 1)


(setq inferior-lisp-program "/usr/bin/sbcl")
(require 'slime)
(slime-setup '(slime-fancy))

(global-set-key (kbd "RET") 'newline-and-indent)

;(setq inferior-lisp-program "/home/work/lisp/ccl/lx86cl64 -K utf-8")
;(require 'slime)
;(setq slime-net-coding-system 'utf-8-unix)
;(slime-setup '(slime-fancy))

(setf common-lisp-hyperspec-root "/home/work/lisp/HyperSpec/")

;save desktop
;(load "desktop")
;(desktop-load-default)
;(desktop-read)
;;当emacs退出时保存文件打开状态
;(add-hook 'kill-emacs-hook
;          '(lambda()(desktop-save "~/")))

;cscope
(require 'xcscope)
(setq cscope-do-not-update-database t)

(define-key global-map [(control f3)]  'cscope-set-initial-directory)
(define-key global-map [(control f4)]  'cscope-unset-initial-directory)
(define-key global-map [(control f5)]  'cscope-find-this-symbol)
(define-key global-map [(control f6)]  'cscope-find-global-definition)
(define-key global-map [(control f7)]  'cscope-find-global-definition-no-prompting)
(define-key global-map [(control f8)]  'cscope-pop-mark)
(define-key global-map [(control f9)]  'cscope-next-symbol)
(define-key global-map [(control f10)] 'cscope-next-file)
(define-key global-map [(control f11)] 'cscope-prev-symbol)
(define-key global-map [(control f12)] 'cscope-prev-file)
(define-key global-map [(meta f9)]     'cscope-display-buffer)
(define-key global-map [(meta f10)]    'cscope-display-buffer-toggle)

;c++ mode style
(add-hook 'c++-mode-hook (lambda () (c-set-style "my")))

; yasnippet
(require 'yasnippet)
(yas-global-mode 1)

(global-auto-complete-mode)

(add-hook 'yas-before-expand-snippet-hook (lambda () (setq ac-auto-start nil)))
(add-hook 'yas-after-exit-snippet-hook (lambda () (setq ac-auto-start t)))


;set font
(set-fontset-font "fontset-default"
      'gb18030 '("WenQuanYi Micro Hei" . "unicode-bmp"))

(setq default-buffer-file-coding-system 'cn-gb-2312)
