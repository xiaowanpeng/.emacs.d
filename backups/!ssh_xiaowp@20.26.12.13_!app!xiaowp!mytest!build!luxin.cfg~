#0.include 包含需要使用其他连接串的obd接口配置文件(必选) 
include $(HOME)/etc/ObdConfig.cfg
#------------1.application---------------------------
#1.必选项,这个section代表该业务服务模块的配置根节点
[application]
SleepTimes=10
#client_list = TASK_MONITOR
#SECOND_CONFIRM,REPAIR,REPAIR_CONFIRM
sleep_time = 10
hb_time = 

select_number=10

#1.1所有数据库链接的逻辑名,可配置多个，参考原openboss的多个连接串sysinfoN
#DbConnections = DB_NGAUDIT
DbConnections=DB_JH

#1.2.该应用用到的缺省数据库链接:CDBPoolFactory::global_dbpool().get_defaultDbPool()
DefaultDbConnection=DB_JH

#1.3.支持该应用的所有app层动态库,每个模块xxxx都需要修改这个lib,就连lua脚本也需要加载

#1.3.1 如果是simple_svr调用simple_app,必须配置:ExtraLibraries = simple_app
#ExtraLibraries = OweMgnt_app

#1.3.2.如果是obdtest_svr要加载lua脚本(simple_obd_i.lua),也必须在这里配置:
#ExtraLibraries= simple_app LuaExt4Svr (并且LuaExt4Svr必须在最后)

#1.4.连接重连次数
DbConnectionRetryTimes = 10

DbTranSeq = DB_JH 
#------------2.ObdConfig---------------------------
#2.可选项：功能1：指定某个/些模块的的某个/些接口或者接口中的某个函数是否处于发布状态
#          功能2：配置其使用不同于缺省数据库链接的其它数据链接，优先与application的DefaultDbConnection
#每个模块xxxx可选修改这个配置，不配置默认无 ,优先覆盖ObdConfig.cfg里面的配置

#2.1 这个是配置这个服务下的APP接口的相关信息:是否发布,连接串,事务提交顺序
#其中Mxxx代表模块名（区分大小写）,Ixxx代表接口名（区分大小写）,Function代表接口函数名(非别名))
#配置如果配置到[ObdConfig.Mxxx::Ixxx]到则对该接口下的所有函数都有效，但如果该接口下某个函数有自己的配置，则以函数的配置为准。
[ObdConfig.Mxxx::Ixxx.Function]
#数据库连接:一般不需要配置,使用默认的连接串
#DbConnection = DB_NGBOSS
#是否禁止发布
DisableDepoly = FALSE
#事务提交顺序:DbTranSeq不配置则使用application.DbConnections中定义的db顺序为提交顺序
DbTranSeq = DB_NGBOSS

#2.2.这个是配置这个服务下的接口调其他obd接口的相关信息(配置DbTranSeq无效),优先覆盖ObdConfig.cfg里面的配置
[ObdConfig.MPersonOperMgr::IPersonOper]
#2.2.1.obd里面该模块该接口所有函数使用逻辑数据库链接名
DbConnection= DB_NGBOSS
#2.2.2.该模块该接口的所有函数均未处于禁止发布状态,可以正常使用
DisableDepoly=FALSE

#------------3.application.DbConnections---------------------------
#3.必选项：配置每个逻辑数据库链接的具体链接信息

#3.1.账务 默认连接串连接数据库的配置
[application.DbConnections.DB_JH]
SysinfoFile=$(HOME)/etc/sysinfo
#公司测试环境配置1,现场建议根据服务的调用情况进行配置
ConnectionNumber=10
#database_id参考ob_database_config表的配置
DatabaseId=1
CheckInterval=300
MinConnectNumber=1
#------------4.application.log---------------------------
#4.必选项：同原来OpenBoss格式的配置文件下的[ModuleName/log]配置项
#  用于设置日志路径,名称,使能与否,开关等信息,每个业务模块xxxx都必须修改 LogFile
[application.log]
MessageFile=$(OB_REL)/etc/msgFile.txt
LogFile=$(HOME)/log/test.log
LogLevel=DEBUG_LEVEL
Enabled=true
logOn=true
ConsoleOn=true


#------------5.openbroker---------------------------
#5.可选项：同原来OpenBoss格式配置文件一样的方式不变
[openbroker]

#5.1.基础配置
bSvrUseIdenticalCodec=1
OBB_FACTORY_DUMP_FILE=$(OB_REL)/svr/TypeFactory/simple.type
OBB_REPOSITORY_PATH=$(OB_REL)/obb_repository
OBB_DUMP_PATH=$(OB_REL)/dump
OBB_DUMP_OPTION=DISABLED
OBB_DEFAULT_CODEC=CDR
OBB_FACTORY_NO_ABORT=true

#5.2.启动转发功能 (app调其他服务,还是svr直接转发, 都需要配置true) 
EnableForward=TRUE  

#5.3.配置远程域和本地域的逻辑名称
[openbroker.forwarder]
RemoteDomains=KT
LocalDomains=LDKTMGNT_SVR

# KT 的详细配置
[openbroker.remote_domains.KT]
MiddlewareType=Socket
# OBSOCKET_ADDR的值对应该obdtester_svr服务IP和端口PORT.
DomainSettings=OBSOCKET_ADDR=10.10.10.186:8860
# LDKTMGNT_SVR 的详细配置，将所有MKTMGNTSVR_IKTMGNTSVR中的请求转发到KTMGNT_SVR
[openbroker.local_domains.LDKTMGNT_SVR]
RemoteDomain=KT 
#如果是app调其他服务,这个可以随便配置,但是不能为空
LocalInterfaces=aaaa
#如果是 svr层直接转发, 就必须要配置需要转发的模块_接口名
#LocalInterfaces=MSIMPLEAPP_ISIMPLEAPP


#------------6.openbroker.forwarder---------------------------
[ob_kernel]
LogSQL=TRUE
DebugUpdatingData=TRUE
DebugConditionData=TRUE
#现场下面这个最好改成FALSE
DebugInsertingData=TRUE
WarnIfSqlExecutionTooLong=2000
WarnIfSelectionTooMany=5000


#------------7.DbCacheCtrl---------------------------
#7.可选项：同原来OpenBoss格式配置文件一样的方式不变
[DbCacheCtrl]

[SampleDbCache]
RefreshPolicy=TimeRefresh
RefreshInterval=1
RefreshTime=10:59:00

#------------8.VisiBroker---------------------------
#8.可选项：同原来OpenBoss格式配置文件一样的方式不变
[VisiBroker]
OBB_PATH_OF_IOR=$(OB_REL)/svr/IOR
#ORB_init=dummy\b-Dvbroker.orb.propStorage=$(OB_REL)/config/vbroker.property
#下面这个visinotify使用
ORB_init=dummy\b-ORBDefaultInitRef\bcorbaloc::10.10.10.186:14100
#ORB_init=agent_svr\b-Dvbroker.se.iiop_tp.scm.iiop_tp.dispatcher.threadStackSize=524288

[application.sys_param.db]
SysinfoFile=$(HOME)/etc/sysinfo
DatabaseId=1

#------------9.lua_extension---------------------------
#9.lua相关的配置:可选项(如果用了lua相关的东西就必须配置)
[lua_extension]
lua_reload_flag = ./aiorl.flag
lua_load_path=$(OB_REL)/lua
lua_env_num=5
lua_query_lib=luarulefile
lua_query_func=load_lua_func

#9.1.lua脚本所在的路径----暂时不起作用
lua_script_path=$(OB_REL)/lua
#lua_script_path=/home/NG_BOSS/wangwb/work/products/openboss/acctmgnt_svr/dataaudit/lua

#9.2.加载的lua文件:默认都加载一个初始话路径的lua文件
#lua_init_files=$(OB_REL)/lua/init.lua
lua_init_files=init.lua

#如果配置了9.3,就需要配置实现该业这些函数的xxxx_obd_i.lua,还必须要加载_imp.lua入口文件
#lua_init_files=$(OB_REL)/lua/init.lua;$(OB_REL)/lua/simple_imp.lua;$(OB_REL)/lua/simple_obd_i.lua

#9.3.obdtest_svr加载simple_app.so库,那些接口函数使用simple_obd_i.lua里面实现的
#extended_functions=SIMPLF00,SIMPLF01,SIMPLF02,SIMPLF03

#9.4.下面是规则引擎init_orl使用到的一些参数
#规则引擎初始函数init_orl如果没有传入session就取这个默认配置连接串:用来读取数据库里面的规则引擎函数
lua_db_connection=DB_NGBOSS

#规则引擎所在用户下的表
lua_func_defs=XG.LUA_FUNC_DEFS

#加载的数据库规则引擎函数的版本
lua_func_version=1.0

#init_orl对数据库规则函数加载方法:0-只加载一次, 1-每次运行都加载
lua_func_reload=0


#------------10.open message---------------------------



#------------11.业务模块如进程等增加的配置项---------------------------



[TASK_MONITOR]
CLIENT_TYPE = 1
moudle_name = task_monitor
ACCEPT_IP = 20.26.11.18
ACCEPT_PORT = 12345
SLEEP_TIME = 10
HB_TIME = 100
