//#include "ob_session.h"
//#include "ob_kernel.h"
//#include "otl.h"
//#include "ailog.h"
#include "node_implement_mgr.h"
#include <dlfcn.h>
#include<iostream>
//#include "FlowManager_db_obd_c.h"
int main(int argc, char* argv[])
{
    char szLibName[] = "/app/sunqing/work/products/openboss/openaudit/sunqing/libnode_implement_mgrD.so"; // 配置业务实现库 ： 具体的类名如何配置和确定？每个类单独一个库么？明天试试
    void* p_busi = dlopen(szLibName, RTLD_LAZY);
    if (!p_busi) {
        std::cout << "Cannot load library: " << dlerror() << '\n';
        return 1;
    }
    dlerror();

    p_new* new_busi = (p_new*) dlsym(p_busi, "New");//函数指针指向与new（）这个函数。
    const char* dlsym_error = dlerror();
    if (dlsym_error) {
        std::cout << "Cannot load symbol create: " << dlsym_error << '\n';
        return 1;
    }

    p_delete* delete_busi = (p_delete*) dlsym(p_busi, "Delete");
    dlsym_error = dlerror();
    if (dlsym_error) {
        std::cout << "Cannot load symbol destroy: " << dlsym_error << '\n';
        return 1;
    }

    CNodeAbstractBase* obj = new_busi();//这里应该需要接受参数，用于构造该对象，如任务号等，也可以放在init函数里
    std::cout<<"it's for testing ,and it runs well!!!";

    delete_busi(obj);

    dlclose(p_busi);


}
