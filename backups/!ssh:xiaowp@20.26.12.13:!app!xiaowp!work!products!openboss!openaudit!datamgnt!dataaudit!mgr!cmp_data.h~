#ifndef _CMP_DATA_H_
#define _CMP_DATA_H_

#include <string>
#include <map>
#include <vector>

#include "tool.h"

typedef std::vector<AISTD string> StringList;

// 字段名 -> 字段值
typedef std::map<AISTD string, StringList> MapName2Values;

// 比对数据，只包含属性字段，(下标+1)表示数据源方
typedef std::vector<MapName2Values> SrcDataList;

// 字段名 -> 字段类型
// 主键字段名 -> 主键值
typedef std::map<AISTD string, AISTD string> MapStr2Str;

class CmpData
{
 public:
  CmpData(int nSrcCount);
  ~CmpData();

  /* @brief 设置比对主键信息
   * @param listColType  字段类型，1：数字； 2：字符串
   * @param listColName  字段名称
   * @param listColValue 字段值
   * @return 0: success; -1: error
   * @see
   * @note
   */
  int setKey
    (const StringList& listColType,
     const StringList& listKeyName,
     const StringList& listKeyValue);

  /* @brief 添加数据源信息
   * @param strSrc      源名称，S1，S2
   * @param listColType 字段类型，1：数字； 2：字符串
   * @param listColName 字段名称
   * @return 0: success; -1: error
   * @see
   * @note 字段类型和字段名称列表的长度应该相等
   */
  int addColInfo
    (const AISTD string& strSrc,
     const StringList& listColType,
     const StringList& listColName);

  /* @brief 重载输入数据的操作符
   * @see
   * @note 先输入源，再输入值
   */
  CmpData& operator << (const AISTD string& strData);

 private:
  // 当前输入的源
  int m_nCurSrc;

  // 当前流操作符读入的数据是否是源信息
  bool m_bIsSrcVal;

  int m_nSrcCount;
  SrcDataList m_listSrcData;
  MapStr2Str m_mapName2Type;
  MapStr2Str m_mapKey2Value;
};

#endif
