 /*
 * @file dmcext_audit_mgr.h
 * @brief  mgr layer for audit
 * @author huangkun, huangkun@asiainfo-linkage.com
 * @copyright(c) 2003-2012, Asiainfo HangZhou. All rights reserved.
 * @version 1.0
 * @date 2011-08-23
 */

#ifndef _DMC_AUDIT_MGR_H_
#define _DMC_AUDIT_MGR_H_

//#include "dmcext_template_mgr.h"
#include "dmcext_template_mgr.cpp"
#include "DataAudit_db_obd_c.h"
#include "FlowManager_db_obd_c.h"
#include <memory>

//using namespace MFlowManagerDb;

class SOBSession;

class CDmcextAuditMgr
{
public:
  
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmFlowDefineList> > getFmFlowDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmFlowNodeInfoList> > getFmFlowNodeInfo(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmFlowNodeParamList> > getFmFlowNodeParam(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmFlowNodeRelationList> > getFmFlowNodeRelation(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmNodeDefineList> > getFmNodeDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmNodeParamDefineList> > getFmNodeParamDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmPlanList> > getFmPlan(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmPlanParamList> > getFmPlanParam(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmTaskLogList> > getFmTaskLog(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmTaskNodeInfoList> > getFmTaskNodeInfo(SOBSession* pSession);

    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CAuditSysParamList> > getAuditSysParam(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CFmScriptDefineList> > getFmScriptDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MFlowManagerDb::CAuditStatusPollingList> > getAuditStatusPolling(SOBSession* pSession);

//-------------------------------------------------------------------------------
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditScriptDefineList> > getAuditScriptDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditScriptRuleList> > getAuditScriptRule(SOBSession* pSession);      	
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditFetchRuleList> > getAuditFetchRule(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditRepairRuleList> >getAuditRepairRule(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditSaveDefineList> >getAuditSaveDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditSystemDefineList> >getAuditSystemDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditSystemIntfDefineList> >getAuditSystemIntfDefine(SOBSession* pSession);	      	
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditRepairOrderList> > getAuditRepairOrder(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditBusiDefineList> > getAuditBusiDefine(SOBSession* pSession);
    static std::auto_ptr< CDmcextTemplateMgr<MDataAuditDb::CAuditCmpRepairRelList> > getAuditCmpRepairRel(SOBSession* pSession);

protected:
    CDmcextAuditMgr();
    virtual ~CDmcextAuditMgr();
    CDmcextAuditMgr( const CDmcextAuditMgr& );
    CDmcextAuditMgr* operator=( const CDmcextAuditMgr& );
};
#endif
